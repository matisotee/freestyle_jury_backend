name: Test, build and deploy to prod
on:
  schedule:
    - cron: '0 1,7,13,19 * * *'
jobs:
  Deploy:
    runs-on: ubuntu-latest
    env:
      OS: 'ubuntu-latest'
      PYTHON: '3.8'
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: '0'
    - name: Get commit count
      run: |
        export COMMIT_COUNT=$(git rev-list --since="6 hours" --count master)
        if (( $COMMIT_COUNT > 0 )); then
        echo "HAS_CHANGES=true" >> $GITHUB_ENV
        echo "There are changes, deployiong to prod..."
        else
        echo "HAS_CHANGES=false" >> $GITHUB_ENV
        echo "There are no changes, skiping execution"
        fi
    # TEST
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      if: ${{ env.HAS_CHANGES }}
      with:
        python-version: '3.8'
    - name: Install dependencies
      if: ${{ env.HAS_CHANGES }}
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt
    - uses: secrethub/actions/env-export@v0.2.1
      if: ${{ env.HAS_CHANGES }}
      env:
        SECRETHUB_CREDENTIAL: ${{ secrets.SECRETHUB_CREDENTIAL }}
        SECRETHUB_VAR_env: dev
    - name: Unit Test
      if: ${{ env.HAS_CHANGES }}
      run: |
        pytest test/unit --cov=./ --cov-report=xml
    - name: Integration Test
      if: ${{ env.HAS_CHANGES }}
      run: |
        pytest test/integration
    #DEPLOY
    - name: Get Previous tag
      if: ${{ env.HAS_CHANGES }}
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@master"
    - name: Deploy to Dockerhub
      if: ${{ env.HAS_CHANGES }}
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: matisotee/freestyle-jury-api
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: "latest,${{ steps.previoustag.outputs.tag }}"

  Slack:
    name: Slack
    needs: Deploy # set needs only last job except this job
    runs-on: ubuntu-latest
    if: always() # set always
    steps:
      # run this action to get workflow conclusion
      # You can get conclusion via env (env.WORKFLOW_CONCLUSION)
      - uses: technote-space/workflow-conclusion-action@v1
      - uses: 8398a7/action-slack@v2
        with:
          # status: ${{ env.WORKFLOW_CONCLUSION }} # neutral, success, cancelled, timed_out, failure
          status: failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: env.WORKFLOW_CONCLUSION == 'failure' # notify only if failure
